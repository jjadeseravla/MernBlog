{"ast":null,"code":"var _jsxFileName = \"/Users/Jade/Documents/mern-blog/client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function login(e) {\n    e.preventDefault();\n    const response = await fetch('https://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        userName,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include' //if have cookie its included in credentials\n    });\n\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: userName,\n        onChange: e => {\n          setUserName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LoginPage, \"m+y/A/1J7bAS62NyOyBdeYnkRDs=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","userName","setUserName","password","setPassword","redirect","setRedirect","login","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/Jade/Documents/mern-blog/client/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { Navigate} from 'react-router-dom'\n\nfunction LoginPage() {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function login(e) {\n    e.preventDefault();\n    const response = await fetch('https://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({ userName, password }),\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include', //if have cookie its included in credentials\n    })\n\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={'/'} />\n  }\n  \n  return (\n    <>\n      <form className=\"login\" onSubmit={login}>\n        <input type=\"text\"\n          placeholder=\"username\"\n          value={userName}\n          onChange={((e) => { setUserName(e.target.value) })} />\n        <input type=\"password\" placeholder=\"password\"\n          value={password}\n          onChange={((e) => { setPassword(e.target.value) })}/>\n      <button>Login</button>\n      </form>\n    </>\n  )\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,eAAec,KAAKA,CAACC,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5Ca,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC;;IAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfZ,WAAW,CAAC,IAAI,CAAC;IACnB;EACF;EAEA,IAAID,QAAQ,EAAE;IACZ,oBAAOT,OAAA,CAACF,QAAQ;MAACyB,EAAE,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,oBACE3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA;MAAM6B,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAEnB,KAAM;MAAAiB,QAAA,gBACtC5B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAChBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE5B,QAAS;QAChB6B,QAAQ,EAAItB,CAAC,IAAK;UAAEN,WAAW,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAC;QAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxD3B,OAAA;QAAO+B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAC3CC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ,EAAItB,CAAC,IAAK;UAAEJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAC;QAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzD3B,OAAA;QAAA4B,QAAA,EAAQ;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC,gBACP,CAAC;AAEP;AAACvB,EAAA,CArCQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}