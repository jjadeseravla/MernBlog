{"ast":null,"code":"var _jsxFileName = \"/Users/Jade/Documents/mern-blog/client/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function register(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include' //if have cookie its included in credentials\n    });\n\n    if (response.status === 200) {\n      alert('registration successful');\n      setRedirect(true);\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register\",\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(RegisterPage, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","register","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","status","alert","children","className","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Jade/Documents/mern-blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState }  from 'react';\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function register(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include', //if have cookie its included in credentials\n    });\n    if (response.status === 200) {\n      alert('registration successful')\n      setRedirect(true);\n    } else {\n      alert('registration failed');\n    }\n  }\n\n  return (\n    <>\n      <form className='register' onSubmit={register}>\n        <input type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n        <input type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      <button>Register</button>\n      </form>\n    </>\n  )\n}\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/C,eAAea,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5Ca,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC;;IACF,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,yBAAyB,CAAC;MAChCb,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLa,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;EAEA,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAMyB,SAAS,EAAC,UAAU;MAACC,QAAQ,EAAEf,QAAS;MAAAa,QAAA,gBAC5CxB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAChBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAElB,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFnC,OAAA;QAAO2B,IAAI,EAAC,UAAU;QACpBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEtB,QAAS;QAChBuB,QAAQ,EAAElB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACJnC,OAAA;QAAAwB,QAAA,EAAQ;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC,gBACP,CAAC;AAEP;AAAC/B,EAAA,CAtCQD,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}